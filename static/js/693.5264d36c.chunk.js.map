{"version":3,"file":"static/js/693.5264d36c.chunk.js","mappings":"iUAuCA,EAnC2BA,EAAAA,YAAiB,WAWzCC,GAAQ,IAVTC,EAUS,EAVTA,SACAC,EASS,EATTA,UACAC,EAQS,EARTA,QACAC,EAOS,EAPTA,SACAC,EAMS,EANTA,WACAC,EAKS,EALTA,MACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,QACAC,EAES,EAFTA,WACGC,GACM,YACHC,GAAoBC,EAAAA,EAAAA,IAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAP,YAA4BH,GAAWD,GAAQ,GAAJ,OAAOI,EAAP,YAA4BJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAP,YAA+C,kBAAZR,EAAP,kBAAyCA,GAAY,WAAaC,GAAY,GAAJ,OAAOO,EAAP,aAAqCN,GAAc,GAAJ,OAAOM,EAAP,eAAuCL,GAAS,GAAJ,OAAOK,EAAP,WAEjVI,GAAqBC,EAAAA,EAAAA,KAAK,SAAD,QAAC,UAAcN,GAAf,IAC7BR,UAAWW,EACXb,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAN,eAMnB,MAJ0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAN,YAAyBR,KAGtBO,EAAAA,EAAAA,KAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,GAEb,CAED,OAAOA,CACR,I,8BC/BGI,GAAQC,EAAAA,EAAAA,OAAK,WAEb,OADAC,QAAQC,IAAI,mCACL,+CACV,IAyCD,SAASC,EAAT,GAAgC,IAAXC,EAAU,EAAVA,QACbC,GAAWC,EAAAA,EAAAA,MACf,OACI,2BACI,wBAAKF,EAAQG,MACb,wBAAKH,EAAQI,QACb,wBAAKJ,EAAQK,SACb,yBAAI,mBAAQC,QAAS,WACjBL,GAASM,EAAAA,EAAAA,IAAUP,EAAQG,IAC9B,EAFG,mBAMf,CAED,MApDA,WAEI,IAAIK,GAAQC,EAAAA,EAAAA,KAAY,SAACD,GAAU,OAAOA,CAAO,IAC7CP,GAAWC,EAAAA,EAAAA,MACfL,QAAQC,IAAIU,GACZ,OAAwBE,EAAAA,EAAAA,UAAS,GAAjC,eAAKL,EAAL,KAAYM,EAAZ,KAEA,OACI,4BACI,SAAChB,EAAD,KACA,mBAAQW,QAAS,WAAMK,EAASN,EAAM,EAAI,EAA1C,gBACA,0BAAKG,EAAMI,KAAKR,KAAhB,IAAuBI,EAAMI,KAAKC,IAAlC,sCACA,mBAAQP,QAAS,WAAML,GAASa,EAAAA,EAAAA,IAAS,GAAK,EAA9C,2BAEA,UAAC,EAAD,CAAOnC,SAAO,EAACC,UAAQ,EAACE,OAAK,EAA7B,WACA,4BACI,2BACA,+BACA,gDACA,0CACA,2DAGJ,2BAEI0B,EAAMO,KAAKC,KAAI,SAAChB,EAASiB,GACrB,OACI,SAAClB,EAAD,CAAYC,QAASA,GAAciB,EAE1C,WAMhB,C","sources":["../node_modules/react-bootstrap/esm/Table.js","pages/Cart.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import { Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeName, increase } from \"../store/userSlice\";\r\nimport { plusCount } from \"../store\";\r\nimport { memo, useMemo, useState } from \"react\";\r\n\r\n// memo는 props가 변할때만 재렌더링 시켜줌\r\nlet Child = memo(function() {\r\n    console.log('재렌더링됨')\r\n    return <div>자식임</div>\r\n})\r\n\r\n\r\n\r\nfunction Cart() {\r\n\r\n    let state = useSelector((state)=>{ return state })\r\n    let dispatch = useDispatch()\r\n    console.log(state);\r\n    let [count, setCount] = useState(0)\r\n\r\n    return (\r\n        <div>\r\n            <Child></Child>\r\n            <button onClick={()=>{ setCount(count+1) }}>+</button>\r\n            <h6>{state.user.name} {state.user.age}의 장바구니</h6>\r\n            <button onClick={()=>{ dispatch(increase(1)) }}>버튼</button>\r\n\r\n            <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                <th>#</th>\r\n                <th>상품명</th>\r\n                <th>수량</th>\r\n                <th>변경하기</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n                state.cart.map((product, i)=>{\r\n                    return (\r\n                        <TabContent product={product} key={i} />\r\n                    )\r\n                })\r\n            }\r\n            </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TabContent({product}) {\r\n    let dispatch = useDispatch()\r\n    return (\r\n        <tr>\r\n            <td>{product.id}</td>\r\n            <td>{product.name}</td>\r\n            <td>{product.count}</td>\r\n            <td><button onClick={()=>{\r\n                dispatch(plusCount(product.id))\r\n            }}>+</button></td>\r\n        </tr>\r\n    )\r\n    \r\n}\r\n\r\nexport default Cart;"],"names":["React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","Child","memo","console","log","TabContent","product","dispatch","useDispatch","id","name","count","onClick","plusCount","state","useSelector","useState","setCount","user","age","increase","cart","map","i"],"sourceRoot":""}
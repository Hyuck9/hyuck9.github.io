{"version":3,"file":"static/js/892.23c14fb0.chunk.js","mappings":"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","sources":["pages/Detail.js"],"sourcesContent":["import '../App.css';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport {Container, Row, Col, Nav} from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from \"react-redux\";\r\nimport {Context1} from './../App.js'\r\nimport { addItem } from \"../store\";\r\n\r\nlet StyledColorBtn = styled.button`\r\n    background: ${ props => props.bg };\r\n    color: ${ props => props.bg == 'blue' ? 'white' : 'black' };\r\n    padding: 10px;\r\n`\r\nlet Box = styled.div`\r\n    background: grey;\r\n    padding: 20px;\r\n`\r\n\r\nclass Detail2 extends React.Component {\r\n    componentDidMount() {\r\n\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    componentWillUnmount() {\r\n\r\n    }\r\n}\r\n\r\nfunction Detail(props) {\r\n\r\n    let {재고} = useContext(Context1)\r\n\r\n    let [count, setCount] = useState(0);\r\n    let [num, setNum] = useState(0);\r\n    let [isAlert, setAlert] = useState(true);\r\n    let [탭, 탭변경] = useState(0);\r\n    let [fade, setFade] = useState('')\r\n\r\n    let {id} = useParams();\r\n    let 찾은상품 = props.shoes.find((x)=> {\r\n        return x.id == id\r\n    });\r\n\r\n\r\n    let dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        // mount 및 update시 callback -> html 렌더링이 다 된 후 실행됨, 시간이 오래걸리는 작업이나 타이머 등은 여기서 실행하면 좋음\r\n        console.log('안녕111')\r\n\r\n        let a = setTimeout(()=>{ setAlert(false) }, 2000)\r\n        setFade('end')\r\n\r\n        return ()=> {\r\n            // return 블럭 안에 내용은 useEffect 실행 전에 실행됨\r\n            // 클린업 코드 등으로 사용\r\n            // mount시 실행 안됨, update/unmount시 실행됨\r\n            clearTimeout(a)\r\n            setFade('')\r\n        }\r\n    }, [])\r\n    console.log('안녕222')\r\n\r\n    // useEffect 정리\r\n    useEffect(()=>{ /*요기 작성*/ })                        // 재렌더링마다 코드를 실행하고싶을 때\r\n    useEffect(()=>{ /*요기 작성*/ }, [])                    // mount시 1회 코드를 실행하고싶을 때\r\n    useEffect(()=>{ return ()=>{ /*요기 작성*/ } }, [])     // unmount시 1회 코드를 실행하고싶을 때\r\n    useEffect(()=>{ return ()=>{ /*요기 작성*/ } })         // useEffect 실행 전에 뭔가 실행하고싶을 때\r\n    useEffect(()=>{ /*요기 작성*/ }, [count])               // 특정 state 변경시에만 실행하고싶을 때 [state명]\r\n\r\n\r\n    useEffect(()=>{\r\n        if (isNaN(num) == true) {\r\n            alert('그러지마세요')\r\n        }\r\n    }, [num])\r\n\r\n    useEffect(()=>{\r\n        let watched = JSON.parse(localStorage.getItem('watched'))\r\n        // if (watched.some(상품=>상품.id==찾은상품.id)) {\r\n\r\n        // }\r\n        //  else {\r\n        //     watched.push(찾은상품)\r\n        //     localStorage.setItem('watched', JSON.stringify(watched))\r\n        // }\r\n        watched.push(찾은상품.id)\r\n        watched = new Set(watched)\r\n        watched = Array.from(watched)\r\n        localStorage.setItem('watched', JSON.stringify(watched))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Container className={`start ${fade}`}>\r\n            {\r\n                isAlert ? <div className='alert alert-warning'>\r\n                    2초이내 구매시 할인\r\n                </div>\r\n                : null\r\n            }\r\n            <Box>\r\n                {count} <StyledColorBtn bg='orange' onClick={()=>{ setCount(count+1) }}>버튼</StyledColorBtn>\r\n            </Box>\r\n            <Row>\r\n            <Col md={6}>\r\n                <img src={\"https://codingapple1.github.io/shop/shoes\"+ Number(찾은상품.id+1) +\".jpg\"} width=\"100%\"/>\r\n            </Col>\r\n            <Col md={6} mt={4}>\r\n                <input onChange={(e)=>{ setNum(e.target.value) }} />\r\n                <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n                <p>{찾은상품.content}</p>\r\n                <p>{찾은상품.price}원</p>\r\n                <button onClick={()=>{\r\n                    dispatch(addItem({id : 1, name : 찾은상품.title, count : 1}))\r\n                }} className=\"btn btn-danger\">주문하기</button> \r\n            </Col>\r\n            </Row>\r\n\r\n            <Nav variant=\"tabs\" defaultActiveKey=\"link0\">\r\n                <Nav.Item>\r\n                    <Nav.Link onClick={()=>{ 탭변경(0) }} eventKey=\"link0\">버튼0</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link onClick={()=>{ 탭변경(1) }} eventKey=\"link1\">버튼1</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link onClick={()=>{ 탭변경(2) }} eventKey=\"link2\">버튼2</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n            <TabContent 탭={탭} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction TabContent({탭}) {\r\n\r\n    let [fade, setFade] = useState('')\r\n    let {재고} = useContext(Context1)\r\n\r\n    useEffect(()=> {\r\n        let a = setTimeout(()=>{setFade('end')}, 10)\r\n        return () => {\r\n            clearTimeout(a)\r\n            setFade('')\r\n        }\r\n    }, [탭])\r\n\r\n    // if (탭 == 0) {\r\n    //     return <div>내용0</div>\r\n    // } else if (탭 == 1) {\r\n    //     return <div>내용1</div>\r\n    // } else if (탭 == 2) {\r\n    //     return <div>내용2</div>\r\n    // }\r\n    return (\r\n        <div className={`start ${fade}`}> \r\n            {[<div>{재고}</div>, <div>내용1</div>, <div>내용2</div>][탭]} \r\n        </div>\r\n    )\r\n    \r\n  }\r\n\r\nexport default Detail;"],"names":["StyledColorBtn","styled","props","bg","Box","React","TabContent","탭","useState","fade","setFade","재고","useContext","Context1","useEffect","a","setTimeout","clearTimeout","className","count","setCount","num","setNum","isAlert","setAlert","탭변경","id","useParams","찾은상품","shoes","find","x","dispatch","useDispatch","console","log","isNaN","alert","watched","JSON","parse","localStorage","getItem","push","Set","Array","from","setItem","stringify","onClick","md","src","Number","width","mt","onChange","e","target","value","title","content","price","addItem","name","variant","defaultActiveKey","eventKey"],"sourceRoot":""}